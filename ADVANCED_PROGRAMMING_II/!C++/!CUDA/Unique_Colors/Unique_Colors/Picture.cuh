#ifndef _PICTURE_CUH_
#define _PICTURE_CUH_
#pragma once

#include "cuda_runtime.h"
#include "cuda_runtime_api.h"
#ifndef __CUDACC__
#define __CUDACC__
#endif
#include <stdio.h>
#include <stdlib.h>
#include <iostream>

#include "Pixel.cuh"

class Picture
{
private:
	/*
		PRIVATE VARIABLES
	*/

	//////////////////////////////////////////////////////////////////////////////
protected:
	/*
		PROTECTED VARIABLES
	*/

	//////////////////////////////////////////////////////////////////////////////
public:
	/*
		KONSTRUKTORY
	*/
	__host__ __device__ Picture();
	__host__ __device__ Picture(const Picture& Object);
	//////////////////////////////////////////////////////////////////////////////
	/*
		FUNKCJE PUBLIC
	*/
	__host__ __device__ void Show_Object() const;
	//////////////////////////////////////////////////////////////////////////////
	/*
		SETTERY
	*/
	//////////////////////////////////////////////////////////////////////////////
	/*
		GETTERY
	*/
	//////////////////////////////////////////////////////////////////////////////
	/*
		OPERATORY
	*/
	//JEDNOARGUMENTOWE
	__host__ __device__ Picture& operator=(const Picture& Object);
	//////////////////////////////////////////////////////////////////////////////
	/*
		DESTRUKTOR
	*/
	__host__ __device__ virtual ~Picture();
	//////////////////////////////////////////////////////////////////////////////
};

#endif /* _PICTURE_CUH_ */