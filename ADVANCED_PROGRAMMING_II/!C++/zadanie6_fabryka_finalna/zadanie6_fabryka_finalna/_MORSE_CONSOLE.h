// _MORSE_CONSOLE_H_ standard header
/*
 *			   Copyright (c) by Damian Andrysiak. All rights reserved.
 *							*** WERSJA FINALNA ***
 *						   *** Koniec: 04/01/2019 ***
 *							Klasa ma za zadanie:

 *	1.	Klasa pochodna po klasie Morse Base
 *	2.	Produktem klasy jest przekonwertowane slowo na morsa 
		wyswietlone na ekranie konsoli
 */
#ifndef _MORSE_CONSOLE_H_
#define _MORSE_CONSOLE_H_
/*
	OUTSIDE FILES .h / .hpp
*/
#include "_MORSE_BASE.h"
//////////////////////////////////////

class _MORSE_CONSOLE final :
	public _MORSE_BASE
{
private:
	/*
		ZMIENNE PRIVATE
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		KONSTRUKTORY PRIVATE
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		FUNKCJE PRIVATE
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		SETTERY PRIVATE
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		GETTERY PRIVATE
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		OPERATORY PRIVATE
	*/
	//JEDNOARGUMENTOWE
	
	//////////////////////////////////////////////////////////////////////////////
protected:
	/*
		ZMIENNE PROTECTED
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		KONSTRUKTORY PROTECTED
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		FUNKCJE PUBLIC PROTECTED
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		SETTERY PROTECTED
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		GETTERY PROTECTED
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		OPERATORY PROTECTED
	*/
	//JEDNOARGUMENTOWE

	//////////////////////////////////////////////////////////////////////////////
public:
	/*
		ZMIENNE PUBLIC
	*/

	//////////////////////////////////////////////////////////////////////////////
	/*
		KONSTRUKTORY PUBLIC
	*/
	_MORSE_CONSOLE();															//konstruktor bezparametrowy	
	explicit _MORSE_CONSOLE(const std::string & name_morse);					//konstruktor z jednym parametrem
	explicit _MORSE_CONSOLE(const _MORSE_CONSOLE & Object);						//konstruktor kopiujacy
	//////////////////////////////////////////////////////////////////////////////
	/*
		FUNKCJE PUBLIC
	*/
	virtual void ExternalInfo(const std::string & chain) override;							//Funkcja otrzymujaca "ExterlanInfo" z fabryki i ustawiajaca nasze zmienne(tu nie robi nic)
	virtual void Morse_Feature(const std::string & from_Converter_fun) override;			//Funkcja ktora tworzy nasz chciany produkt(tutaj wyswietla na konsoli)
	//////////////////////////////////////////////////////////////////////////////
	/*
		SETTERY PUBLIC
	*/
	
	//////////////////////////////////////////////////////////////////////////////
	/*
		GETTERY PUBLIC
	*/
	virtual const std::string & get_name_morse(void) const;				//getter nazwy morsa
	//////////////////////////////////////////////////////////////////////////////
	/*
		OPERATORY PUBLIC
	*/
	//JEDNOARGUMENTOWE
	_MORSE_CONSOLE & operator=(const _MORSE_CONSOLE & Object);						//operator przypisania
	//DWYARGUMENTOWE
	//////////////////////////////////////////////////////////////////////////////
	/*
		DESTRUKTOR
	*/
	virtual ~_MORSE_CONSOLE();					//wirtualny destruktor
	//////////////////////////////////////////////////////////////////////////////
};

#endif /* _MORSE_CONSOLE_H_ */